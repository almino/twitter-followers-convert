/**
 * This function queries Twitter's API using multiple account IDs and returns the corresponding handles.
 * Generated by https://codepal.ai/
 *
 * @param {string[]} accountIds - An array of Twitter account IDs to query.
 * @param {string} bearerToken - The bearer token required to authenticate the API request.
 * @returns {Promise<Object>} - A promise that resolves to an object containing the account IDs and their corresponding handles.
 * @throws {Error} - Throws an error if the API request fails or if the response is not in the expected format.
 */
async function queryTwitterApi(accountIds, bearerToken) {
  try {
    // Construct the API request URL
    const apiUrl = `https://api.twitter.com/2/users?ids=${accountIds.join(',')}&user.fields=username`;

    // Send the API request
    const response = await fetch(apiUrl, {
      headers: {
        Authorization: `Bearer ${bearerToken}`
      }
    });

    // Parse the response as JSON
    const data = await response.json();

    // Check if the response contains errors
    if (data.errors) {
      throw new Error(`API error: ${data.errors[0].detail}`);
    }

    // Extract the account IDs and handles from the response
    const accounts = {};
    data.data.forEach(account => {
      accounts[account.id] = account.username;
    });

    return accounts;
  } catch (error) {
    console.error(error);
    throw new Error('Failed to query Twitter API');
  }
}
